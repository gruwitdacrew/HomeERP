@using HomeERP.Models.DTOs.Response
@using HomeERP.Models.Domain
@using Attribute = HomeERP.Models.Domain.Attribute;
@using Object = HomeERP.Models.Domain.Object;
@model EntityWideResponse

<div class="table-container">  
    <h1>@Model.Entity.Name</h1>  
    <table class="table-bordered">
        <thead>  
            <tr>
                <th>Имя</th>
                @foreach (Attribute Attribute in Model.Attributes)  
                {
                    <th>@Attribute.Name</th>
                }  
            </tr>  
        </thead>  
        <tbody class="table">  
            @foreach (Object Object in Model.Objects)  
            {
                @using (Html.BeginForm("EditObject", "Entity", FormMethod.Post))
                {
                    int k = 0;
                    <tr>
                        <td style="position:relative">
                            <input name="ObjectId" type="hidden" value="@Object.Id" />
                            <button type="button" class="deleteBtn" style="font-size: 30px;" onclick="location.href='@Url.Action("DeleteObject", "Entity", new { ObjectId = Object.Id })'">&times;</button>
                            <button type="button" class="editBtn">&#9998;</button>
                            <button type="submit" class="confirmBtn">&check;</button>
                            <input name="ObjectName" class="text-center rounded-3 card-text border-0 inputAttribute" disabled type="text" value="@Object.Name" />
                        </td>
                        @foreach (Attribute Attribute in Model.Attributes)  
                        {
                            AttributeValue AttributeValue = Model.AttributeValues[Object].GetValueOrDefault(Attribute);  

                            if (Attribute.Type == AttributeType.Integer && AttributeValue is IntegerAttributeValue IntegerAttributeValue)  
                            {
                                <td>
                                    <input name="RawAttributeValues[@k].AttributeId" type="hidden" value="@Attribute.Id" />
                                    <input name="RawAttributeValues[@k].AttributeType" type="hidden" value="Integer" />
                                    <input name="RawAttributeValues[@k].AttributeValue" class="text-center rounded-3 card-text border-0 inputAttribute" disabled type="number" value="@IntegerAttributeValue.Value" />
                                </td>
                            }
                            else if (Attribute.Type == AttributeType.String && AttributeValue is StringAttributeValue StringAttributeValue)
                            {
                                <td>
                                    <input name="RawAttributeValues[@k].AttributeId" type="hidden" value="@Attribute.Id" />
                                    <input name="RawAttributeValues[@k].AttributeType" type="hidden" value="String" />
                                    <input name="RawAttributeValues[@k].AttributeValue" class="text-center rounded-3 card-text border-0 inputAttribute" disabled type="text" value="@StringAttributeValue.Value" />
                                </td>
                            }
                            else if (Attribute.Type == AttributeType.Date && AttributeValue is DateAttributeValue DateAttributeValue)
                            {
                                <td>
                                    <input name="RawAttributeValues[@k].AttributeId" type="hidden" value="@Attribute.Id" />
                                    <input name="RawAttributeValues[@k].AttributeType" type="hidden" value="Date" />
                                    <input name="RawAttributeValues[@k].AttributeValue" class="text-center rounded-3 card-text border-0 inputAttribute" disabled type="date" value="@DateAttributeValue.Value.ToLocalTime().ToString("yyyy-MM-dd")" />
                                </td>
                            }
                            else if (Attribute.Type == AttributeType.Link && AttributeValue is LinkAttributeValue LinkAttributeValue)
                            {
                                <td>
                                    <input name="RawAttributeValues[@k].AttributeId" type="hidden" value="@Attribute.Id" />
                                    <input name="RawAttributeValues[@k].AttributeType" type="hidden" value="Link" />
                                    <select name="RawAttributeValues[@k].AttributeValue" class="text-center rounded-3 card-text border-0 inputAttribute" disabled type="text" value="@LinkAttributeValue.Value">
                                        @foreach (Object EntityObject in (Attribute as LinkAttribute).EntityObjects)
                                        {
                                            if (EntityObject.Id == LinkAttributeValue.Value)
                                            {
                                                <option value="@EntityObject.Id" selected>@EntityObject.Name</option>
                                            }
                                            else
                                            {
                                                <option value="@EntityObject.Id">@EntityObject.Name</option>
                                            }
                                        }
                                    </select>
                                </td>
                            }
                            k++;
                        }
                    </tr>  
                }
            }
        </tbody>  
    </table>
    <button class="buttonAction2" style="margin-top:20px" onclick="location.href='@Url.Action("CreateObject", "Entity", new { EntityId = Model.Entity.Id })'">
        Создать объект
    </button>
</div>

<script>
    document.querySelectorAll('.editBtn').forEach(button => {
        button.onclick = function() {
            const row = this.closest('tr');
            const inputs = row.querySelectorAll('.inputAttribute');
            row.querySelectorAll('.confirmBtn')[0].style.display = 'block';
            row.querySelectorAll('.editBtn')[0].style.visibility = 'hidden';
            row.querySelectorAll('.deleteBtn')[0].style.visibility = 'hidden';

            inputs.forEach(input => {
                input.disabled = false;
                input.removeAttribute('disabled');
            });
        };
    });

    document.querySelectorAll('.confirmBtn').forEach(button => {
        button.onclick = function() {
            const row = this.closest('tr');
            const inputs = row.querySelectorAll('.inputAttribute');
            row.querySelectorAll('.confirmBtn')[0].style.display = 'none';
            row.querySelectorAll('.editBtn')[0].style.visibility = 'visible';
            row.querySelectorAll('.deleteBtn')[0].style.visibility = 'visible';

            inputs.forEach(input => {

            });
        };
    });
</script>

<style>

    .table-container {
        margin-bottom: 20px;
    }

    .content {
        flex-grow: 1;
        padding: 20px;
        background-color: #ffffff;
    }

    .table-container {
        margin-top: 20px;
        overflow-x: auto;
    }

    table {
        width: 100%;
        border-collapse: collapse;
    }

    th, td {
        padding: 12px;
        text-align: center;
        border: 3px solid #ddd;
    }

    th {
        background-color: #007bff;
        color: white;
    }

        tbody tr:hover {
            background-color: #f5f5f5;
        }

        tbody tr:hover .deleteBtn {
            display: block;
        }

        tbody tr:hover .editBtn {
            display: block;
        }

    .buttonAction2 {
        width: 100%;
        padding: 15px;
        font-size: 16px;
        background-color: white;
        color: #007BFF;
        border: 2px solid #007BFF;
        border-radius: 0 0 8px 8px;
        cursor: pointer;
        font-weight: bold;
        transition: background-color 0.3s, color 0.3s;
    }

    .buttonAction2:hover {
        background-color: #E0E0E0;
        color: #007BFF;
    }

    .deleteBtn {
        display: none;
        position: absolute;
        right: 10px;
        top: 1px;
        background: none;
        border: none;
        color: red;
        font-size: 24px;
        cursor: pointer;
    }

    .editBtn {
        display: none;
        position: absolute;
        right: 30px;
        top: 14px;
        background: none;
        border: none;
        color: black;
        font-size: 15px;
        cursor: pointer;
    }

    .confirmBtn {
        display: none;
        position: absolute;
        right: 30px;
        top: 7px;
        background: none;
        border: none;
        color: green;
        font-size: 24px;
        cursor: pointer;
    }
</style>