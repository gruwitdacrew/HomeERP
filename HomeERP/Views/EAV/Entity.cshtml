@using HomeERP.Models.EAV.DTOs.Response
@using HomeERP.Models.EAV.Domain
@using Attribute = HomeERP.Models.EAV.Domain.Attribute
@using Object = HomeERP.Models.EAV.Domain.Object
@model EntityWideResponse

<div class="table-container">
    <h1>@Model.Entity.Name</h1>
    <div>Фильтры</div>
    @{
        await Html.RenderPartialAsync("Filter", (Model.Entity, Model.Attributes));
    }
    <table class="table-bordered">
        <thead>
            <tr>
                <th>Имя</th>
                @foreach (Attribute Attribute in Model.Attributes)
                {
                    <th style="position:relative">
                        @Attribute.Name
                        <button onclick="location.href='@Url.Action("DeleteAttribute", "EAV", new { AttributeId = Attribute.Id })'" type="button" class="deleteBtn" style="font-size: 30px">&times;</button>
                    </th>
                }
            </tr>
        </thead>
        <tbody class="table">
            @foreach (Object Object in Model.Objects)
            {
                @using (Html.BeginForm("EditObject", "EAV", FormMethod.Post, new { enctype = "multipart/form-data" }))
                {
                    <tr>
                        <td style="position:relative">
                            <input name="ObjectId" type="hidden" value="@Object.Id" />
                            <button type="button" class="deleteBtn" style="font-size: 30px;" onclick="location.href='@Url.Action("DeleteObject", "EAV", new { ObjectId = Object.Id })'">&times;</button>
                            <button type="button" class="editBtn">&#9998;</button>
                            <button type="submit" class="confirmBtn">&check;</button>
                            <input name="ObjectName" class="text-center rounded-3 card-text border-0 inputAttribute" disabled type="text" value="@Object.Name" />
                        </td>
                        @{
                            int j = 0;
                        }
                        @foreach (AttributeValue AttributeValue in Object.AttributeValues != null ? Object.AttributeValues : new List<AttributeValue>())
                        {
                            if (AttributeValue is IntegerAttributeValue IntegerAttributeValue)
                            {
                                <td>
                                    <input name="RawAttributeValues[@j].AttributeId" type="hidden" value="@AttributeValue.Attribute.Id" />
                                    <input name="RawAttributeValues[@j].AttributeType" type="hidden" value="Integer" />
                                    <input name="RawAttributeValues[@j].AttributeValue" class="text-center rounded-3 card-text border-0 inputAttribute" disabled type="number" value="@IntegerAttributeValue.Value" />
                                </td>
                            }
                            else if (AttributeValue is StringAttributeValue StringAttributeValue)
                            {
                                <td>
                                    <input name="RawAttributeValues[@j].AttributeId" type="hidden" value="@AttributeValue.Attribute.Id" />
                                    <input name="RawAttributeValues[@j].AttributeType" type="hidden" value="String" />
                                    <input name="RawAttributeValues[@j].AttributeValue" class="text-center rounded-3 card-text border-0 inputAttribute" disabled type="text" value="@StringAttributeValue.Value" />
                                </td>
                            }
                            else if (AttributeValue is DateAttributeValue DateAttributeValue)
                            {
                                <td>
                                    <input name="RawAttributeValues[@j].AttributeId" type="hidden" value="@AttributeValue.Attribute.Id" />
                                    <input name="RawAttributeValues[@j].AttributeType" type="hidden" value="Date" />
                                    <input name="RawAttributeValues[@j].AttributeValue" class="text-center rounded-3 card-text border-0 inputAttribute" disabled type="date" value="@DateAttributeValue.Value?.ToLocalTime().ToString("yyyy-MM-dd")" />
                                </td>
                            }
                            else if (AttributeValue is LinkAttributeValue LinkAttributeValue)
                            {
                                <td>
                                    <input name="RawAttributeValues[@j].AttributeId" type="hidden" value="@AttributeValue.Attribute.Id" />
                                    <input name="RawAttributeValues[@j].AttributeType" type="hidden" value="Link" />
                                    <select name="RawAttributeValues[@j].AttributeValue" class="text-center rounded-3 card-text border-0 inputAttribute" disabled type="text" value="@LinkAttributeValue.Value">
                                        <option></option>
                                        @foreach (Object EntityObject in (AttributeValue.Attribute as LinkAttribute).EntityObjects)
                                        {
                                            if (EntityObject.Id == LinkAttributeValue.Value)
                                            {
                                                <option value="@EntityObject.Id" selected>@EntityObject.Name</option>
                                            }
                                            else
                                            {
                                                <option value="@EntityObject.Id">@EntityObject.Name</option>
                                            }
                                        }
                                    </select>
                                </td>
                            }
                            else if (AttributeValue is FileAttributeValue FileAttributeValue)
                            {
                                <td>
                                    <input name="RawAttributeValues[@j].AttributeId" type="hidden" value="@AttributeValue.Attribute.Id" />
                                    <input name="RawAttributeValues[@j].AttributeType" type="hidden" value="File" />
                                    <input name="RawAttributeValues[@j].File" class="text-center rounded-3 card-text border-0 inputAttribute" type="file" style="display:none" />
                                    @if (FileAttributeValue.FileId != null)
                                    {
                                        <button type="button" class="text-center rounded-3 card-text border-0 fileName" style="background-color:dodgerblue; width:35%" onclick="location.href='@Url.Action("GetFile", "EAV", new { FileId = FileAttributeValue.FileId })'">скачать файл</button>
                                        <button type="button" class="text-center rounded-3 card-text border-0 fileName" style="background-color:indianred; width:35%" onclick="location.href='@Url.Action("DeleteFile", "EAV", new { FileId = FileAttributeValue.FileId })'">удалить файл</button>
                                    }
                                </td>
                            }
                            else if (AttributeValue is FloatAttributeValue FloatAttributeValue)
                            {
                                <td>
                                    <input name="RawAttributeValues[@j].AttributeId" type="hidden" value="@AttributeValue.Attribute.Id" />
                                    <input name="RawAttributeValues[@j].AttributeType" type="hidden" value="Float" />
                                    <input name="RawAttributeValues[@j].AttributeValue" class="text-center rounded-3 card-text border-0 inputAttribute" disabled type="text" value="@FloatAttributeValue.Value" />
                                </td>
                            }
                            j++;
                        }
                    </tr>
                }
            }
        </tbody>
    </table>
    <p></p>
    <div class="row w-50 px-4 gap-3">
        <button class="buttonAction w-25" onclick="location.href='@Url.Action("CreateObject", "EAV", new { EntityId = Model.Entity.Id })'">Создать объект</button>
        <button class="buttonAction w-25" onclick="location.href='@Url.Action("AddAttribute", "EAV", new { EntityId = Model.Entity.Id })'">Добавить атрибут</button>
    </div>
</div>

<script>
    document.querySelectorAll('.editBtn').forEach(button => {
        button.onclick = function() {
            const row = this.closest('tr');
            const inputs = row.querySelectorAll('.inputAttribute');
            row.querySelectorAll('.confirmBtn')[0].style.display = 'block';
            row.querySelectorAll('.editBtn')[0].style.visibility = 'hidden';
            row.querySelectorAll('.deleteBtn')[0].style.visibility = 'hidden';


            inputs.forEach(input => {
                input.disabled = false;
                input.removeAttribute('disabled');
            });

            const fileInputs = row.querySelectorAll('input[type="file"]');
            const fileNames = row.querySelectorAll('.fileName');

            // Устанавливаем стиль display для всех input[type="file"] на 'block'
            fileInputs.forEach(function(input) {
                input.style.display = 'block';
            });

            // Устанавливаем стиль display для всех .fileName на 'none'
            fileNames.forEach(function(fileName) {
                fileName.style.display = 'none';
            });
        };
    });
</script>

<style>
    .table-container {
        margin-bottom: 20px;
    }

    .content {
        flex-grow: 1;
        padding: 20px;
        background-color: #ffffff;
    }

    .table-container {
        margin-top: 20px;
        overflow-x: auto;
    }

    table {
        width: 100%;
        border-collapse: collapse;
    }

    th, td {
        padding: 12px;
        text-align: center;
        border: 3px solid #ddd;
    }

    th {
        background-color: #007bff;
        color: white;
    }

        tbody tr:hover {
            background-color: #f5f5f5;
        }

        tbody tr:hover .deleteBtn {
            display: block;
        }

        th:hover .deleteBtn {
            display: block;
        }

        tbody tr:hover .editBtn {
            display: block;
        }

    .buttonAction2 {
        width: 100%;
        padding: 15px;
        font-size: 16px;
        background-color: white;
        color: #007BFF;
        border: 2px solid #007BFF;
        border-radius: 0 0 8px 8px;
        cursor: pointer;
        font-weight: bold;
        transition: background-color 0.3s, color 0.3s;
    }

    .buttonAction2:hover {
        background-color: #E0E0E0;
        color: #007BFF;
    }

    .deleteBtn {
        display: none;
        position: absolute;
        right: 10px;
        top: 1px;
        background: none;
        border: none;
        color: red;
        font-size: 24px;
        cursor: pointer;
    }

    .editBtn {
        display: none;
        position: absolute;
        right: 30px;
        top: 14px;
        background: none;
        border: none;
        color: black;
        font-size: 15px;
        cursor: pointer;
    }

    .filterСontainer {
        display: flex;
        flex-wrap: wrap;
        justify-content: space-between; /* Располагать фильтры равномерно */
        width: 100%; /* Во всю ширину */
        padding: 10px;
        box-sizing: border-box; /* Учитывать padding в ширине */
    }

    .filter {
        flex: 1 1 48%; /* Фильтры занимают 48% ширины */
        margin: 5px; /* Отступы между фильтрами */
        padding: 10px;
        background-color: #f0f0f0;
        border: 1px solid #ccc;
        border-radius: 4px;
        text-align: center;
        box-sizing: border-box;
    }

    .confirmBtn {
        display: none;
        position: absolute;
        right: 30px;
        top: 7px;
        background: none;
        border: none;
        color: green;
        font-size: 24px;
        cursor: pointer;
    }
</style>