@using HomeERP.Domain.EAV.Models;
@using Object = HomeERP.Domain.EAV.Models.Object;
@using Attribute = HomeERP.Domain.EAV.Models.Attribute;
@model List<Entity>

@using (Html.BeginForm("CreateChore", "Chore", FormMethod.Post))
{
	<div class="modal fade" id="CreateChoreModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
		<div class="modal-dialog">
			<div class="modal-content">
				<div class="modal-header">
					<h5 class="modal-title" id="exampleModalLabel">Создание задания</h5>
					<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Закрыть" onclick="ShowAttributeSelect(null)"></button>
				</div>
				<div class="modal-body">
					<div class="mb-3">
						<label class="form-label">Укажите название дела</label>
						<input class="form-control" type="text" name="Name" />
					</div>

					<div class="mb-3">
						<label class="form-label">Укажите тип</label>
						<select class="form-select" name="ChoreType" onchange="showSecondSelect(this)">
							<option value="Plan">Плановое</option>
							<option value="Repetitive">Повторяющееся</option>
						</select>
					</div>

					<div id="secondSelect" style="display: none">
						<label class="form-label">Укажите период времени предупреждения</label>
						<div class="d-flex flex-row mb-3">
							<label class="form-label me-2" style="width:45%">Количество дней:</label>
							<input class="form-control form-control-sm" type="number" name="Days" value="1"/>
						</div>
						<div class="d-flex flex-row mb-3">
							<label class="form-label me-2" style="width:45%">Количество часов:</label>
							<input class="form-control form-control-sm" type="number" name="Hours" value="0" />
						</div>
					</div>

					<div class="mb-3">
						<label class="form-label">Укажите имущество</label>
						<div class="accordion" id="accordionPanelsStayOpenExample">
							@{int k = 0;}
							@foreach (Entity entity in Model)
							{
								<div class="accordion-item">
									<h2 class="accordion-header" id="panelsStayOpen-headingOne">
										<button onclick="selectEntity('checkbox-@entity.Id')" class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapse@(entity.Id)" aria-expanded="false" aria-controls="collapseOne">
											<input id="checkbox-@entity.Id" type="checkbox" class="form-check-input ms-1" />
											<span class="ms-4">@entity.Name</span>
										</button>
									</h2>
									<div id="collapse@(entity.Id)" class="accordion-collapse collapse" aria-labelledby="panelsStayOpen-headingOne">
										<div class="accordion-body">
											@foreach (Object Object in entity.Objects)
											{
												<label class="d-flex flex-row ms-5" for="checkbox-@Object.Id">
													<input onclick="selectObject(this)" id="checkbox-@Object.Id" type="checkbox" class="form-check-input objectTask" name="ObjectIds" value="@Object.Id" />
													<p class="d-flex flex-column align-items-center">@Object.Name</p>
												</label>
												k++;
											}
										</div>
									</div>
								</div>
							}
						</div>
					</div>
				</div>
				<div class="modal-footer">
					<button type="button" class="btn btn-danger" data-bs-dismiss="modal">Отмена</button>
					<button type="submit" class="btn btn-primary">Создать</button>
				</div>
			</div>
		</div>
	</div>
}


<style>
	.scrollable-menu {
		height: auto;
		max-height: 200px;
		overflow-x: hidden;
	}
</style>

<script>
	function selectObject(checkbox) {
		const accordionItem = checkbox.closest('.accordion-item');

		const inputs = accordionItem.querySelectorAll('input[type=checkbox].objectTask');

		const allChecked = Array.from(inputs).every(input => input.checked);

		const parentCheckbox = accordionItem.querySelector('input[type=checkbox]');

		if (parentCheckbox) {
			parentCheckbox.checked = allChecked;
		}
	}
	function selectEntity(selectedElementId)
	{
		var entityCheck = document.getElementById(selectedElementId);
		var accordionItem = entityCheck.closest('.accordion-item');

		if (entityCheck.checked)
		{
			entityCheck.checked = false;
			accordionItem.querySelectorAll('input[type=checkbox]').forEach(input => {
				input.checked = false;
			});
		}
		else
		{
			entityCheck.checked = true;
			accordionItem.querySelectorAll('input[type=checkbox]').forEach(input => {
				input.checked = true;
			});
		}


	}
	function showSecondSelect(selectedOption)
	{
		if (selectedOption.value == "Repetitive")
		{
			document.getElementById("secondSelect").style.display = "block";
		}
		else document.getElementById("secondSelect").style.display = "none";
	}
</script>