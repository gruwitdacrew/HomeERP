// <auto-generated />
using System;
using Logistics.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace HomeERP.Migrations
{
    [DbContext(typeof(AppDBContext))]
    [Migration("20250426121944_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("HomeERP.Models.Chore.Domain.Chore", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("AttributeId")
                        .HasColumnType("uuid");

                    b.Property<int>("DeltaTimeInDays")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("WarningType")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AttributeId");

                    b.ToTable("Chores");
                });

            modelBuilder.Entity("HomeERP.Models.EAV.Domain.Attribute", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("EntityId")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("EntityId");

                    b.ToTable("Attributes");

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("HomeERP.Models.EAV.Domain.AttributeValue", b =>
                {
                    b.Property<Guid>("ObjectId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("AttributeId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("ChangeDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsCurrent")
                        .HasColumnType("boolean");

                    b.HasKey("ObjectId", "AttributeId", "ChangeDate");

                    b.HasIndex("AttributeId");

                    b.ToTable((string)null);

                    b.UseTpcMappingStrategy();
                });

            modelBuilder.Entity("HomeERP.Models.EAV.Domain.Entity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Entities");
                });

            modelBuilder.Entity("HomeERP.Models.EAV.Domain.Object", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("EntityId")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("EntityId");

                    b.ToTable("Objects");
                });

            modelBuilder.Entity("HomeERP.Models.EAV.Domain.LinkAttribute", b =>
                {
                    b.HasBaseType("HomeERP.Models.EAV.Domain.Attribute");

                    b.Property<Guid>("LinkedEntityId")
                        .HasColumnType("uuid");

                    b.HasIndex("LinkedEntityId");

                    b.ToTable("LinkAttributes");
                });

            modelBuilder.Entity("HomeERP.Models.EAV.Domain.DateAttributeValue", b =>
                {
                    b.HasBaseType("HomeERP.Models.EAV.Domain.AttributeValue");

                    b.Property<DateTime?>("Value")
                        .HasColumnType("timestamp with time zone");

                    b.ToTable("DateAttributeValues");
                });

            modelBuilder.Entity("HomeERP.Models.EAV.Domain.FileAttributeValue", b =>
                {
                    b.HasBaseType("HomeERP.Models.EAV.Domain.AttributeValue");

                    b.Property<string>("ContentType")
                        .HasColumnType("text");

                    b.Property<Guid?>("FileId")
                        .HasColumnType("uuid");

                    b.ToTable("FileAttributeValues");
                });

            modelBuilder.Entity("HomeERP.Models.EAV.Domain.FloatAttributeValue", b =>
                {
                    b.HasBaseType("HomeERP.Models.EAV.Domain.AttributeValue");

                    b.Property<float?>("Value")
                        .HasColumnType("real");

                    b.ToTable("FloatAttributeValues");
                });

            modelBuilder.Entity("HomeERP.Models.EAV.Domain.IntegerAttributeValue", b =>
                {
                    b.HasBaseType("HomeERP.Models.EAV.Domain.AttributeValue");

                    b.Property<int?>("Value")
                        .HasColumnType("integer");

                    b.ToTable("IntegerAttributeValues");
                });

            modelBuilder.Entity("HomeERP.Models.EAV.Domain.LinkAttributeValue", b =>
                {
                    b.HasBaseType("HomeERP.Models.EAV.Domain.AttributeValue");

                    b.Property<Guid?>("Value")
                        .HasColumnType("uuid");

                    b.HasIndex("Value");

                    b.ToTable("LinkAttributeValues");
                });

            modelBuilder.Entity("HomeERP.Models.EAV.Domain.StringAttributeValue", b =>
                {
                    b.HasBaseType("HomeERP.Models.EAV.Domain.AttributeValue");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.ToTable("StringAttributeValues");
                });

            modelBuilder.Entity("HomeERP.Models.Chore.Domain.Chore", b =>
                {
                    b.HasOne("HomeERP.Models.EAV.Domain.Attribute", "Attribute")
                        .WithMany()
                        .HasForeignKey("AttributeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Attribute");
                });

            modelBuilder.Entity("HomeERP.Models.EAV.Domain.Attribute", b =>
                {
                    b.HasOne("HomeERP.Models.EAV.Domain.Entity", "Entity")
                        .WithMany("Attributes")
                        .HasForeignKey("EntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Entity");
                });

            modelBuilder.Entity("HomeERP.Models.EAV.Domain.AttributeValue", b =>
                {
                    b.HasOne("HomeERP.Models.EAV.Domain.Attribute", "Attribute")
                        .WithMany()
                        .HasForeignKey("AttributeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HomeERP.Models.EAV.Domain.Object", "Object")
                        .WithMany("AttributeValues")
                        .HasForeignKey("ObjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Attribute");

                    b.Navigation("Object");
                });

            modelBuilder.Entity("HomeERP.Models.EAV.Domain.Object", b =>
                {
                    b.HasOne("HomeERP.Models.EAV.Domain.Entity", "Entity")
                        .WithMany("Objects")
                        .HasForeignKey("EntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Entity");
                });

            modelBuilder.Entity("HomeERP.Models.EAV.Domain.LinkAttribute", b =>
                {
                    b.HasOne("HomeERP.Models.EAV.Domain.Attribute", null)
                        .WithOne()
                        .HasForeignKey("HomeERP.Models.EAV.Domain.LinkAttribute", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HomeERP.Models.EAV.Domain.Entity", null)
                        .WithMany()
                        .HasForeignKey("LinkedEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HomeERP.Models.EAV.Domain.LinkAttributeValue", b =>
                {
                    b.HasOne("HomeERP.Models.EAV.Domain.Object", null)
                        .WithMany()
                        .HasForeignKey("Value");
                });

            modelBuilder.Entity("HomeERP.Models.EAV.Domain.Entity", b =>
                {
                    b.Navigation("Attributes");

                    b.Navigation("Objects");
                });

            modelBuilder.Entity("HomeERP.Models.EAV.Domain.Object", b =>
                {
                    b.Navigation("AttributeValues");
                });
#pragma warning restore 612, 618
        }
    }
}
