// <auto-generated />
using System;
using HomeERP.Domain.Common.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace HomeERP.Migrations
{
    [DbContext(typeof(AppDBContext))]
    partial class AppDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("HomeERP.Domain.Chores.Models.Chore", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Chores");

                    b.HasDiscriminator<int>("Type");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("HomeERP.Domain.Chores.Models.Task", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("ChoreId")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("ExecutionMoment")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDone")
                        .HasColumnType("boolean");

                    b.Property<Guid>("ObjectId")
                        .HasColumnType("uuid");

                    b.Property<TimeSpan?>("TrackedTime")
                        .HasColumnType("interval");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ChoreId");

                    b.HasIndex("ObjectId");

                    b.HasIndex("UserId");

                    b.ToTable("Task");
                });

            modelBuilder.Entity("HomeERP.Domain.Common.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d2503327-15ec-4b67-96f0-be16467a9dbe"),
                            Name = "Demo User"
                        });
                });

            modelBuilder.Entity("HomeERP.Domain.EAV.Models.Attribute", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("character varying(13)");

                    b.Property<Guid>("EntityId")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("EntityId");

                    b.ToTable("Attributes");

                    b.HasDiscriminator().HasValue("Attribute");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("HomeERP.Domain.EAV.Models.AttributeValue", b =>
                {
                    b.Property<Guid>("ObjectId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("AttributeId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("ChangeDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsCurrent")
                        .HasColumnType("boolean");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("ObjectId", "AttributeId", "ChangeDate");

                    b.HasIndex("AttributeId");

                    b.HasIndex("UserId");

                    b.ToTable((string)null);

                    b.UseTpcMappingStrategy();
                });

            modelBuilder.Entity("HomeERP.Domain.EAV.Models.Entity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Entities");
                });

            modelBuilder.Entity("HomeERP.Domain.EAV.Models.Object", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("EntityId")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("EntityId");

                    b.ToTable("Objects");
                });

            modelBuilder.Entity("HomeERP.Domain.Chores.Models.PlanChore", b =>
                {
                    b.HasBaseType("HomeERP.Domain.Chores.Models.Chore");

                    b.HasDiscriminator().HasValue(1);
                });

            modelBuilder.Entity("HomeERP.Domain.Chores.Models.RepetitiveChore", b =>
                {
                    b.HasBaseType("HomeERP.Domain.Chores.Models.Chore");

                    b.Property<TimeSpan>("DeltaTime")
                        .HasColumnType("interval");

                    b.HasDiscriminator().HasValue(0);
                });

            modelBuilder.Entity("HomeERP.Domain.EAV.Models.LinkAttribute", b =>
                {
                    b.HasBaseType("HomeERP.Domain.EAV.Models.Attribute");

                    b.Property<Guid>("LinkedEntityId")
                        .HasColumnType("uuid");

                    b.HasIndex("LinkedEntityId");

                    b.HasDiscriminator().HasValue("LinkAttribute");
                });

            modelBuilder.Entity("HomeERP.Domain.EAV.Models.DateAttributeValue", b =>
                {
                    b.HasBaseType("HomeERP.Domain.EAV.Models.AttributeValue");

                    b.Property<DateTime?>("Value")
                        .HasColumnType("timestamp with time zone");

                    b.ToTable("DateAttributeValues");
                });

            modelBuilder.Entity("HomeERP.Domain.EAV.Models.FileAttributeValue", b =>
                {
                    b.HasBaseType("HomeERP.Domain.EAV.Models.AttributeValue");

                    b.Property<string>("ContentType")
                        .HasColumnType("text");

                    b.Property<Guid?>("FileId")
                        .HasColumnType("uuid");

                    b.ToTable("FileAttributeValues");
                });

            modelBuilder.Entity("HomeERP.Domain.EAV.Models.FloatAttributeValue", b =>
                {
                    b.HasBaseType("HomeERP.Domain.EAV.Models.AttributeValue");

                    b.Property<float?>("Value")
                        .HasColumnType("real");

                    b.ToTable("FloatAttributeValues");
                });

            modelBuilder.Entity("HomeERP.Domain.EAV.Models.IntegerAttributeValue", b =>
                {
                    b.HasBaseType("HomeERP.Domain.EAV.Models.AttributeValue");

                    b.Property<int?>("Value")
                        .HasColumnType("integer");

                    b.ToTable("IntegerAttributeValues");
                });

            modelBuilder.Entity("HomeERP.Domain.EAV.Models.LinkAttributeValue", b =>
                {
                    b.HasBaseType("HomeERP.Domain.EAV.Models.AttributeValue");

                    b.Property<Guid?>("Value")
                        .HasColumnType("uuid");

                    b.HasIndex("Value");

                    b.ToTable("LinkAttributeValues");
                });

            modelBuilder.Entity("HomeERP.Domain.EAV.Models.StringAttributeValue", b =>
                {
                    b.HasBaseType("HomeERP.Domain.EAV.Models.AttributeValue");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.ToTable("StringAttributeValues");
                });

            modelBuilder.Entity("HomeERP.Domain.Chores.Models.Task", b =>
                {
                    b.HasOne("HomeERP.Domain.Chores.Models.Chore", "Chore")
                        .WithMany("Tasks")
                        .HasForeignKey("ChoreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HomeERP.Domain.EAV.Models.Object", "Object")
                        .WithMany()
                        .HasForeignKey("ObjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HomeERP.Domain.Common.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Chore");

                    b.Navigation("Object");

                    b.Navigation("User");
                });

            modelBuilder.Entity("HomeERP.Domain.EAV.Models.Attribute", b =>
                {
                    b.HasOne("HomeERP.Domain.EAV.Models.Entity", "Entity")
                        .WithMany("Attributes")
                        .HasForeignKey("EntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Entity");
                });

            modelBuilder.Entity("HomeERP.Domain.EAV.Models.AttributeValue", b =>
                {
                    b.HasOne("HomeERP.Domain.EAV.Models.Attribute", "Attribute")
                        .WithMany()
                        .HasForeignKey("AttributeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HomeERP.Domain.EAV.Models.Object", "Object")
                        .WithMany("AttributeValues")
                        .HasForeignKey("ObjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HomeERP.Domain.Common.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Attribute");

                    b.Navigation("Object");

                    b.Navigation("User");
                });

            modelBuilder.Entity("HomeERP.Domain.EAV.Models.Object", b =>
                {
                    b.HasOne("HomeERP.Domain.EAV.Models.Entity", "Entity")
                        .WithMany("Objects")
                        .HasForeignKey("EntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Entity");
                });

            modelBuilder.Entity("HomeERP.Domain.EAV.Models.LinkAttribute", b =>
                {
                    b.HasOne("HomeERP.Domain.EAV.Models.Entity", "LinkedEntity")
                        .WithMany()
                        .HasForeignKey("LinkedEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LinkedEntity");
                });

            modelBuilder.Entity("HomeERP.Domain.EAV.Models.LinkAttributeValue", b =>
                {
                    b.HasOne("HomeERP.Domain.EAV.Models.Object", null)
                        .WithMany()
                        .HasForeignKey("Value");
                });

            modelBuilder.Entity("HomeERP.Domain.Chores.Models.Chore", b =>
                {
                    b.Navigation("Tasks");
                });

            modelBuilder.Entity("HomeERP.Domain.EAV.Models.Entity", b =>
                {
                    b.Navigation("Attributes");

                    b.Navigation("Objects");
                });

            modelBuilder.Entity("HomeERP.Domain.EAV.Models.Object", b =>
                {
                    b.Navigation("AttributeValues");
                });
#pragma warning restore 612, 618
        }
    }
}
